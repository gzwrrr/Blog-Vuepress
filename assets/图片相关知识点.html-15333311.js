import{_ as l,Q as o,S as a,U as e,a8 as n}from"./framework-d7e1aa10.js";const t={},s=e("h1",{id:"图片相关知识点",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#图片相关知识点","aria-hidden":"true"},"#"),n(" 图片相关知识点")],-1),r=e("p",null,"在 Web 开发中，我们通常会涉及到图片的处理和传输，以下是关于 buffer、blob、file、base64 的简单说明：",-1),_=e("ol",null,[e("li",null,[e("p",null,"Buffer：是 Node.js 中处理二进制数据的对象，是一个 Uint8Array 类型的数组。可以通过将一个字符串转为 Buffer，也可以通过在 Node.js 中读取文件来得到一个 Buffer。")]),e("li",null,[e("p",null,"Blob：是一个二进制大对象，通常用于表示文件或图像等二进制数据。可以使用 Blob() 构造函数创建一个 Blob 对象，然后将其传递给其他 API，比如 FileReader.readAsArrayBuffer() 方法来读取文件内容。")]),e("li",null,[e("p",null,"File：是一个特殊的 Blob，表示用户选择上传的文件，包含了文件名、大小等信息。通常在表单中通过 input[type=file] 来获取用户选择的文件。")]),e("li",null,[e("p",null,"Base64：是一种用于传输二进制数据的编码方式，将二进制数据转换为 ASCII 字符串。在前端开发中，可以使用 window.btoa() 方法将一个字符串转为 Base64 编码，使用 window.atob() 方法将 Base64 编码还原为原始字符串。也可以将一个 Blob 或 File 对象转为 Base64 编码，然后将其传输给后端，后端再解码还原为二进制数据。")])],-1),i=[s,r,_];function u(d,c){return o(),a("div",null,i)}const B=l(t,[["render",u],["__file","图片相关知识点.html.vue"]]);export{B as default};
