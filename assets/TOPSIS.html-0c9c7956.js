import{_ as s,Q as a,S as p,U as e,W as l,X as n,a8 as t,a9 as i,H as c}from"./framework-d7e1aa10.js";const r={},_=e("h1",{id:"topsis-法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#topsis-法","aria-hidden":"true"},"#"),t(" TOPSIS 法")],-1),d={class:"table-of-contents"},u=i("<p>逼近理想解排序法/优劣解距离法</p><p>指标：</p><ul><li>越大越好，极大型指标（效益型指标）</li><li>越小越好，极小型指标（成本型指标）</li><li>中间型指标，越接近某个值越好</li><li>区间型指标，落在某个区间最好</li></ul><p>将所有的指标转换为极大型为：指标正向化（最常用）</p><p>极小型指标转换成极大型指标的公式：max - x</p><p>正向化后的指标一般都要进行「标准化处理」，以此消除量纲，这样不同指标之间才能求和</p><p>所谓的将原式矩阵正向化，即使将所有的指标类型统一转换为极大型指标</p><p>基本流程：</p><p>矩阵正向化 -&gt; 标准化 -&gt; 计算得分并归一化</p><p>改进：</p><p>基于「熵权法」对该模型的修正是一种较为客观的赋权方法</p><p>熵权法依据：</p><p>指标的的变异程度越小，所反映的信息量越小，其对应的权值就越小（数据本身就可以告诉我们权重）</p>",13);function h(f,S){const o=c("router-link");return a(),p("div",null,[_,e("nav",d,[e("ul",null,[e("li",null,[l(o,{to:"#topsis-法"},{default:n(()=>[t("TOPSIS 法")]),_:1})])])]),u])}const x=s(r,[["render",h],["__file","TOPSIS.html.vue"]]);export{x as default};
