import{_ as l,Q as o,S as a,U as t,W as r,X as s,a8 as e,a9 as i,H as d}from"./framework-d7e1aa10.js";const c={},p=t("h1",{id:"spring-事件处理",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#spring-事件处理","aria-hidden":"true"},"#"),e(" Spring 事件处理")],-1),g={class:"table-of-contents"},x=i('<div class="table-wrapper"><table><thead><tr><th style="text-align:left;">序号</th><th style="text-align:left;">Spring 内置事件 &amp; 描述</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;"><strong>ContextRefreshedEvent</strong>：ApplicationContext 被初始化或刷新时，该事件被发布。这也可以在 ConfigurableApplicationContext 接口中使用 refresh() 方法来发生。</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;"><strong>ContextStartedEvent</strong>：当使用 ConfigurableApplicationContext 接口中的 start() 方法启动 ApplicationContext 时，该事件被发布。你可以调查你的数据库，或者你可以在接受到这个事件后重启任何停止的应用程序。</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;"><strong>ContextStoppedEvent</strong>：当使用 ConfigurableApplicationContext 接口中的 stop() 方法停止 ApplicationContext 时，发布这个事件。你可以在接受到这个事件后做必要的清理的工作。</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;"><strong>ContextClosedEvent</strong>：当使用 ConfigurableApplicationContext 接口中的 close() 方法关闭 ApplicationContext 时，该事件被发布。一个已关闭的上下文到达生命周期末端；它不能被刷新或重启。</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;"><strong>RequestHandledEvent</strong>：这是一个 web-specific 事件，告诉所有 bean HTTP 请求已经被服务。</td></tr></tbody></table></div>',1);function f(_,h){const n=d("router-link");return o(),a("div",null,[p,t("nav",g,[t("ul",null,[t("li",null,[r(n,{to:"#spring-事件处理"},{default:s(()=>[e("Spring 事件处理")]),_:1})])])]),x])}const u=l(c,[["render",f],["__file","D-Spring事件处理.html.vue"]]);export{u as default};
