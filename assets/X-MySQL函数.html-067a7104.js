import{_ as o,Q as r,S as s,U as t,a8 as e,W as d,a9 as n,H as a}from"./framework-d7e1aa10.js";const i={},E=n('<h1 id="mysql-函数" tabindex="-1"><a class="header-anchor" href="#mysql-函数" aria-hidden="true">#</a> MySQL 函数</h1><h2 id="版本一" tabindex="-1"><a class="header-anchor" href="#版本一" aria-hidden="true">#</a> 版本一</h2><h3 id="数值型函数" tabindex="-1"><a class="header-anchor" href="#数值型函数" aria-hidden="true">#</a> 数值型函数</h3>',3),c={class:"table-wrapper"},g=t("thead",null,[t("tr",null,[t("th",null,"函数名称"),t("th",null,"作 用")])],-1),f={href:"http://c.biancheng.net/mysql/abc.html",target:"_blank",rel:"noopener noreferrer"},x=t("td",null,"求绝对值",-1),y={href:"http://c.biancheng.net/mysql/sqrt.html",target:"_blank",rel:"noopener noreferrer"},h=t("td",null,"求二次方根",-1),_={href:"http://c.biancheng.net/mysql/mod.html",target:"_blank",rel:"noopener noreferrer"},u=t("td",null,"求余数",-1),T={href:"http://c.biancheng.net/mysql/ceil_celing.html",target:"_blank",rel:"noopener noreferrer"},S=t("td",null,"两个函数功能相同，都是返回不小于参数的最小整数，即向上取整",-1),C={href:"http://c.biancheng.net/mysql/floor.html",target:"_blank",rel:"noopener noreferrer"},A=t("td",null,"向下取整，返回值转化为一个BIGINT",-1),N={href:"http://c.biancheng.net/mysql/rand.html",target:"_blank",rel:"noopener noreferrer"},O=t("td",null,"生成一个0~1之间的随机数，传入整数参数是，用来产生重复序列",-1),L={href:"http://c.biancheng.net/mysql/round.html",target:"_blank",rel:"noopener noreferrer"},R=t("td",null,"对所传参数进行四舍五入",-1),b={href:"http://c.biancheng.net/mysql/sign.html",target:"_blank",rel:"noopener noreferrer"},I=t("td",null,"返回参数的符号",-1),m={href:"http://c.biancheng.net/mysql/pow_power.html",target:"_blank",rel:"noopener noreferrer"},p=t("td",null,"两个函数的功能相同，都是所传参数的次方的结果值",-1),q={href:"http://c.biancheng.net/mysql/sin.html",target:"_blank",rel:"noopener noreferrer"},D=t("td",null,"求正弦值",-1),M={href:"http://c.biancheng.net/mysql/asin.html",target:"_blank",rel:"noopener noreferrer"},U=t("td",null,"求反正弦值，与函数 SIN 互为反函数",-1),F={href:"http://c.biancheng.net/mysql/cos.html",target:"_blank",rel:"noopener noreferrer"},k=t("td",null,"求余弦值",-1),P={href:"http://c.biancheng.net/mysql/acos.html",target:"_blank",rel:"noopener noreferrer"},B=t("td",null,"求反余弦值，与函数 COS 互为反函数",-1),Y={href:"http://c.biancheng.net/mysql/tan.html",target:"_blank",rel:"noopener noreferrer"},H=t("td",null,"求正切值",-1),G={href:"http://c.biancheng.net/mysql/atan.html",target:"_blank",rel:"noopener noreferrer"},W=t("td",null,"求反正切值，与函数 TAN 互为反函数",-1),v={href:"http://c.biancheng.net/mysql/cot.html",target:"_blank",rel:"noopener noreferrer"},V=t("td",null,"求余切值",-1),X=t("h3",{id:"字符串函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#字符串函数","aria-hidden":"true"},"#"),e(" 字符串函数")],-1),w={class:"table-wrapper"},K=t("thead",null,[t("tr",null,[t("th",null,"函数名称"),t("th",null,"作 用")])],-1),J={href:"http://c.biancheng.net/mysql/length.html",target:"_blank",rel:"noopener noreferrer"},Q=t("td",null,"计算字符串长度函数，返回字符串的字节长度",-1),$={href:"http://c.biancheng.net/mysql/concat.html",target:"_blank",rel:"noopener noreferrer"},j=t("td",null,"合并字符串函数，返回结果为连接参数产生的字符串，参数可以使一个或多个",-1),z={href:"http://c.biancheng.net/mysql/insert.html",target:"_blank",rel:"noopener noreferrer"},Z=t("td",null,"替换字符串函数",-1),tt={href:"http://c.biancheng.net/mysql/lower.html",target:"_blank",rel:"noopener noreferrer"},et=t("td",null,"将字符串中的字母转换为小写",-1),lt={href:"http://c.biancheng.net/mysql/upper.html",target:"_blank",rel:"noopener noreferrer"},dt=t("td",null,"将字符串中的字母转换为大写",-1),nt={href:"http://c.biancheng.net/mysql/left.html",target:"_blank",rel:"noopener noreferrer"},ot=t("td",null,"从左侧字截取符串，返回字符串左边的若干个字符",-1),rt={href:"http://c.biancheng.net/mysql/right.html",target:"_blank",rel:"noopener noreferrer"},st=t("td",null,"从右侧字截取符串，返回字符串右边的若干个字符",-1),at={href:"http://c.biancheng.net/mysql/trim.html",target:"_blank",rel:"noopener noreferrer"},it=t("td",null,"删除字符串左右两侧的空格",-1),Et={href:"http://c.biancheng.net/mysql/replace.html",target:"_blank",rel:"noopener noreferrer"},ct=t("td",null,"字符串替换函数，返回替换后的新字符串",-1),gt={href:"http://c.biancheng.net/mysql/substring.html",target:"_blank",rel:"noopener noreferrer"},ft=t("td",null,"截取字符串，返回从指定位置开始的指定长度的字符换",-1),xt={href:"http://c.biancheng.net/mysql/reverse.html",target:"_blank",rel:"noopener noreferrer"},yt=t("td",null,"字符串反转（逆序）函数，返回与原始字符串顺序相反的字符串",-1),ht=t("h3",{id:"日期和时间函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#日期和时间函数","aria-hidden":"true"},"#"),e(" 日期和时间函数")],-1),_t={class:"table-wrapper"},ut=t("thead",null,[t("tr",null,[t("th",null,"函数名称"),t("th",null,"作 用")])],-1),Tt={href:"http://c.biancheng.net/mysql/curdate_current_date.html",target:"_blank",rel:"noopener noreferrer"},St=t("td",null,"两个函数作用相同，返回当前系统的日期值",-1),Ct={href:"http://c.biancheng.net/mysql/curtime_current_time.html",target:"_blank",rel:"noopener noreferrer"},At=t("td",null,"两个函数作用相同，返回当前系统的时间值",-1),Nt={href:"http://c.biancheng.net/mysql/now_sysdate.html",target:"_blank",rel:"noopener noreferrer"},Ot=t("td",null,"两个函数作用相同，返回当前系统的日期和时间值",-1),Lt={href:"http://c.biancheng.net/mysql/unix_timestamp.html",target:"_blank",rel:"noopener noreferrer"},Rt=t("td",null,"获取UNIX时间戳函数，返回一个以 UNIX 时间戳为基础的无符号整数",-1),bt={href:"http://c.biancheng.net/mysql/from_unixtime.html",target:"_blank",rel:"noopener noreferrer"},It=t("td",null,"将 UNIX 时间戳转换为时间格式，与UNIX_TIMESTAMP互为反函数",-1),mt={href:"http://c.biancheng.net/mysql/month.html",target:"_blank",rel:"noopener noreferrer"},pt=t("td",null,"获取指定日期中的月份",-1),qt={href:"http://c.biancheng.net/mysql/monthname.html",target:"_blank",rel:"noopener noreferrer"},Dt=t("td",null,"获取指定日期中的月份英文名称",-1),Mt={href:"http://c.biancheng.net/mysql/dayname.html",target:"_blank",rel:"noopener noreferrer"},Ut=t("td",null,"获取指定曰期对应的星期几的英文名称",-1),Ft={href:"http://c.biancheng.net/mysql/dayofweek.html",target:"_blank",rel:"noopener noreferrer"},kt=t("td",null,"获取指定日期对应的一周的索引位置值",-1),Pt={href:"http://c.biancheng.net/mysql/week.html",target:"_blank",rel:"noopener noreferrer"},Bt=t("td",null,"获取指定日期是一年中的第几周，返回值的范围是否为 0〜52 或 1〜53",-1),Yt={href:"http://c.biancheng.net/mysql/dayofyear.html",target:"_blank",rel:"noopener noreferrer"},Ht=t("td",null,"获取指定曰期是一年中的第几天，返回值范围是1~366",-1),Gt={href:"http://c.biancheng.net/mysql/dayofmonth.html",target:"_blank",rel:"noopener noreferrer"},Wt=t("td",null,"获取指定日期是一个月中是第几天，返回值范围是1~31",-1),vt={href:"http://c.biancheng.net/mysql/year.html",target:"_blank",rel:"noopener noreferrer"},Vt=t("td",null,"获取年份，返回值范围是 1970〜2069",-1),Xt={href:"http://c.biancheng.net/mysql/time_to_sec.html",target:"_blank",rel:"noopener noreferrer"},wt=t("td",null,"将时间参数转换为秒数",-1),Kt={href:"http://c.biancheng.net/mysql/sec_to_time.html",target:"_blank",rel:"noopener noreferrer"},Jt=t("td",null,"将秒数转换为时间，与TIME_TO_SEC 互为反函数",-1),Qt={href:"http://c.biancheng.net/mysql/date_add_adddate.html",target:"_blank",rel:"noopener noreferrer"},$t=t("td",null,"两个函数功能相同，都是向日期添加指定的时间间隔",-1),jt={href:"http://c.biancheng.net/mysql/date_sub_subdate.html",target:"_blank",rel:"noopener noreferrer"},zt=t("td",null,"两个函数功能相同，都是向日期减去指定的时间间隔",-1),Zt={href:"http://c.biancheng.net/mysql/addtime.html",target:"_blank",rel:"noopener noreferrer"},te=t("td",null,"时间加法运算，在原始时间上添加指定的时间",-1),ee={href:"http://c.biancheng.net/mysql/subtime.html",target:"_blank",rel:"noopener noreferrer"},le=t("td",null,"时间减法运算，在原始时间上减去指定的时间",-1),de={href:"http://c.biancheng.net/mysql/datediff.html",target:"_blank",rel:"noopener noreferrer"},ne=t("td",null,"获取两个日期之间间隔，返回参数 1 减去参数 2 的值",-1),oe={href:"http://c.biancheng.net/mysql/date_format.html",target:"_blank",rel:"noopener noreferrer"},re=t("td",null,"格式化指定的日期，根据参数返回指定格式的值",-1),se={href:"http://c.biancheng.net/mysql/weekday.html",target:"_blank",rel:"noopener noreferrer"},ae=t("td",null,"获取指定日期在一周内的对应的工作日索引",-1),ie=t("h3",{id:"聚合函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#聚合函数","aria-hidden":"true"},"#"),e(" 聚合函数")],-1),Ee={class:"table-wrapper"},ce=t("thead",null,[t("tr",null,[t("th",null,"函数名称"),t("th",null,"作用")])],-1),ge={href:"http://c.biancheng.net/mysql/max.html",target:"_blank",rel:"noopener noreferrer"},fe=t("td",null,"查询指定列的最大值",-1),xe={href:"http://c.biancheng.net/mysql/min.html",target:"_blank",rel:"noopener noreferrer"},ye=t("td",null,"查询指定列的最小值",-1),he={href:"http://c.biancheng.net/mysql/count.html",target:"_blank",rel:"noopener noreferrer"},_e=t("td",null,"统计查询结果的行数",-1),ue={href:"http://c.biancheng.net/mysql/sum.html",target:"_blank",rel:"noopener noreferrer"},Te=t("td",null,"求和，返回指定列的总和",-1),Se={href:"http://c.biancheng.net/mysql/avg.html",target:"_blank",rel:"noopener noreferrer"},Ce=t("td",null,"求平均值，返回指定列数据的平均值",-1),Ae=t("h3",{id:"流程控制函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#流程控制函数","aria-hidden":"true"},"#"),e(" 流程控制函数")],-1),Ne={class:"table-wrapper"},Oe=t("thead",null,[t("tr",null,[t("th",null,"函数名称"),t("th",null,"作用")])],-1),Le={href:"http://c.biancheng.net/mysql/if.html",target:"_blank",rel:"noopener noreferrer"},Re=t("td",null,"判断，流程控制",-1),be={href:"http://c.biancheng.net/mysql/ifnull.html",target:"_blank",rel:"noopener noreferrer"},Ie=t("td",null,"判断是否为空",-1),me={href:"http://c.biancheng.net/mysql/case.html",target:"_blank",rel:"noopener noreferrer"},pe=t("td",null,"搜索语句",-1),qe=n('<h2 id="版本二" tabindex="-1"><a class="header-anchor" href="#版本二" aria-hidden="true">#</a> 版本二</h2><h3 id="字符串函数-1" tabindex="-1"><a class="header-anchor" href="#字符串函数-1" aria-hidden="true">#</a> 字符串函数</h3><div class="table-wrapper"><table><thead><tr><th style="text-align:left;">函数</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">ASCII(s)</td><td style="text-align:left;">返回字符串 s 的第一个字符的 ASCII 码。</td><td style="text-align:left;">返回 CustomerName 字段第一个字母的 ASCII 码：<code>SELECT ASCII(CustomerName) AS NumCodeOfFirstChar FROM Customers;</code></td></tr><tr><td style="text-align:left;">CHAR_LENGTH(s)</td><td style="text-align:left;">返回字符串 s 的字符数</td><td style="text-align:left;">返回字符串 RUNOOB 的字符数<code>SELECT CHAR_LENGTH(&quot;RUNOOB&quot;) AS LengthOfString;</code></td></tr><tr><td style="text-align:left;">CHARACTER_LENGTH(s)</td><td style="text-align:left;">返回字符串 s 的字符数，等同于 CHAR_LENGTH(s)</td><td style="text-align:left;">返回字符串 RUNOOB 的字符数<code>SELECT CHARACTER_LENGTH(&quot;RUNOOB&quot;) AS LengthOfString;</code></td></tr><tr><td style="text-align:left;">CONCAT(s1,s2...sn)</td><td style="text-align:left;">字符串 s1,s2 等多个字符串合并为一个字符串</td><td style="text-align:left;">合并多个字符串<code>SELECT CONCAT(&quot;SQL &quot;, &quot;Runoob &quot;, &quot;Gooogle &quot;, &quot;Facebook&quot;) AS ConcatenatedString;</code></td></tr><tr><td style="text-align:left;">CONCAT_WS(x, s1,s2...sn)</td><td style="text-align:left;">同 CONCAT(s1,s2,...) 函数，但是每个字符串之间要加上 x，x 可以是分隔符</td><td style="text-align:left;">合并多个字符串，并添加分隔符：<code>SELECT CONCAT_WS(&quot;-&quot;, &quot;SQL&quot;, &quot;Tutorial&quot;, &quot;is&quot;, &quot;fun!&quot;)AS ConcatenatedString;</code></td></tr><tr><td style="text-align:left;">FIELD(s,s1,s2...)</td><td style="text-align:left;">返回第一个字符串 s 在字符串列表(s1,s2...)中的位置</td><td style="text-align:left;">返回字符串 c 在列表值中的位置：<code>SELECT FIELD(&quot;c&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;);</code></td></tr><tr><td style="text-align:left;">FIND_IN_SET(s1,s2)</td><td style="text-align:left;">返回在字符串s2中与s1匹配的字符串的位置</td><td style="text-align:left;">返回字符串 c 在指定字符串中的位置：<code>SELECT FIND_IN_SET(&quot;c&quot;, &quot;a,b,c,d,e&quot;);</code></td></tr><tr><td style="text-align:left;">FORMAT(x,n)</td><td style="text-align:left;">函数可以将数字 x 进行格式化 &quot;#,###.##&quot;, 将 x 保留到小数点后 n 位，最后一位四舍五入。</td><td style="text-align:left;">格式化数字 &quot;#,###.##&quot; 形式：<code>SELECT FORMAT(250500.5634, 2); -- 输出 250,500.56</code></td></tr><tr><td style="text-align:left;">INSERT(s1,x,len,s2)</td><td style="text-align:left;">字符串 s2 替换 s1 的 x 位置开始长度为 len 的字符串</td><td style="text-align:left;">从字符串第一个位置开始的 6 个字符替换为 runoob：<code>SELECT INSERT(&quot;google.com&quot;, 1, 6, &quot;runoob&quot;); -- 输出：runoob.com</code></td></tr><tr><td style="text-align:left;">LOCATE(s1,s)</td><td style="text-align:left;">从字符串 s 中获取 s1 的开始位置</td><td style="text-align:left;">获取 b 在字符串 abc 中的位置：<code>SELECT LOCATE(&#39;st&#39;,&#39;myteststring&#39;); -- 5</code>返回字符串 abc 中 b 的位置：<code>SELECT LOCATE(&#39;b&#39;, &#39;abc&#39;) -- 2</code></td></tr><tr><td style="text-align:left;">LCASE(s)</td><td style="text-align:left;">将字符串 s 的所有字母变成小写字母</td><td style="text-align:left;">字符串 RUNOOB 转换为小写：<code>SELECT LCASE(&#39;RUNOOB&#39;) -- runoob</code></td></tr><tr><td style="text-align:left;">LEFT(s,n)</td><td style="text-align:left;">返回字符串 s 的前 n 个字符</td><td style="text-align:left;">返回字符串 runoob 中的前两个字符：<code>SELECT LEFT(&#39;runoob&#39;,2) -- ru</code></td></tr><tr><td style="text-align:left;">LOWER(s)</td><td style="text-align:left;">将字符串 s 的所有字母变成小写字母</td><td style="text-align:left;">字符串 RUNOOB 转换为小写：<code>SELECT LOWER(&#39;RUNOOB&#39;) -- runoob</code></td></tr><tr><td style="text-align:left;">LPAD(s1,len,s2)</td><td style="text-align:left;">在字符串 s1 的开始处填充字符串 s2，使字符串长度达到 len</td><td style="text-align:left;">将字符串 xx 填充到 abc 字符串的开始处：<code>SELECT LPAD(&#39;abc&#39;,5,&#39;xx&#39;) -- xxabc</code></td></tr><tr><td style="text-align:left;">LTRIM(s)</td><td style="text-align:left;">去掉字符串 s 开始处的空格</td><td style="text-align:left;">去掉字符串 RUNOOB开始处的空格：<code>SELECT LTRIM(&quot; RUNOOB&quot;) AS LeftTrimmedString;-- RUNOOB</code></td></tr><tr><td style="text-align:left;">MID(s,n,len)</td><td style="text-align:left;">从字符串 s 的 n 位置截取长度为 len 的子字符串，同 SUBSTRING(s,n,len)</td><td style="text-align:left;">从字符串 RUNOOB 中的第 2 个位置截取 3个 字符：<code>SELECT MID(&quot;RUNOOB&quot;, 2, 3) AS ExtractString; -- UNO</code></td></tr><tr><td style="text-align:left;">POSITION(s1 IN s)</td><td style="text-align:left;">从字符串 s 中获取 s1 的开始位置</td><td style="text-align:left;">返回字符串 abc 中 b 的位置：<code>SELECT POSITION(&#39;b&#39; in &#39;abc&#39;) -- 2</code></td></tr><tr><td style="text-align:left;">REPEAT(s,n)</td><td style="text-align:left;">将字符串 s 重复 n 次</td><td style="text-align:left;">将字符串 runoob 重复三次：<code>SELECT REPEAT(&#39;runoob&#39;,3) -- runoobrunoobrunoob</code></td></tr><tr><td style="text-align:left;">REPLACE(s,s1,s2)</td><td style="text-align:left;">将字符串 s2 替代字符串 s 中的字符串 s1</td><td style="text-align:left;">将字符串 abc 中的字符 a 替换为字符 x：<code>SELECT REPLACE(&#39;abc&#39;,&#39;a&#39;,&#39;x&#39;) --xbc</code></td></tr><tr><td style="text-align:left;">REVERSE(s)</td><td style="text-align:left;">将字符串s的顺序反过来</td><td style="text-align:left;">将字符串 abc 的顺序反过来：<code>SELECT REVERSE(&#39;abc&#39;) -- cba</code></td></tr><tr><td style="text-align:left;">RIGHT(s,n)</td><td style="text-align:left;">返回字符串 s 的后 n 个字符</td><td style="text-align:left;">返回字符串 runoob 的后两个字符：<code>SELECT RIGHT(&#39;runoob&#39;,2) -- ob</code></td></tr><tr><td style="text-align:left;">RPAD(s1,len,s2)</td><td style="text-align:left;">在字符串 s1 的结尾处添加字符串 s2，使字符串的长度达到 len</td><td style="text-align:left;">将字符串 xx 填充到 abc 字符串的结尾处：<code>SELECT RPAD(&#39;abc&#39;,5,&#39;xx&#39;) -- abcxx</code></td></tr><tr><td style="text-align:left;">RTRIM(s)</td><td style="text-align:left;">去掉字符串 s 结尾处的空格</td><td style="text-align:left;">去掉字符串 RUNOOB 的末尾空格：<code>SELECT RTRIM(&quot;RUNOOB &quot;) AS RightTrimmedString; -- RUNOOB</code></td></tr><tr><td style="text-align:left;">SPACE(n)</td><td style="text-align:left;">返回 n 个空格</td><td style="text-align:left;">返回 10 个空格：<code>SELECT SPACE(10);</code></td></tr><tr><td style="text-align:left;">STRCMP(s1,s2)</td><td style="text-align:left;">比较字符串 s1 和 s2，如果 s1 与 s2 相等返回 0 ，如果 s1&gt;s2 返回 1，如果 s1&lt;s2 返回 -1</td><td style="text-align:left;">比较字符串：<code>SELECT STRCMP(&quot;runoob&quot;, &quot;runoob&quot;); -- 0</code></td></tr><tr><td style="text-align:left;">SUBSTR(s, start, length)</td><td style="text-align:left;">从字符串 s 的 start 位置截取长度为 length 的子字符串</td><td style="text-align:left;">从字符串 RUNOOB 中的第 2 个位置截取 3个 字符：<code>SELECT SUBSTR(&quot;RUNOOB&quot;, 2, 3) AS ExtractString; -- UNO</code></td></tr><tr><td style="text-align:left;">SUBSTRING(s, start, length)</td><td style="text-align:left;">从字符串 s 的 start 位置截取长度为 length 的子字符串，等同于 SUBSTR(s, start, length)</td><td style="text-align:left;">从字符串 RUNOOB 中的第 2 个位置截取 3个 字符：<code>SELECT SUBSTRING(&quot;RUNOOB&quot;, 2, 3) AS ExtractString; -- UNO</code></td></tr><tr><td style="text-align:left;">SUBSTRING_INDEX(s, delimiter, number)</td><td style="text-align:left;">返回从字符串 s 的第 number 个出现的分隔符 delimiter 之后的子串。 如果 number 是正数，返回第 number 个字符左边的字符串。 如果 number 是负数，返回第(number 的绝对值(从右边数))个字符右边的字符串。</td><td style="text-align:left;"><code>SELECT SUBSTRING_INDEX(&#39;a*b&#39;,&#39;*&#39;,1) -- a SELECT SUBSTRING_INDEX(&#39;a*b&#39;,&#39;*&#39;,-1) -- b SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(&#39;a*b*c*d*e&#39;,&#39;*&#39;,3),&#39;*&#39;,-1) -- c</code></td></tr><tr><td style="text-align:left;">TRIM(s)</td><td style="text-align:left;">去掉字符串 s 开始和结尾处的空格</td><td style="text-align:left;">去掉字符串 RUNOOB 的首尾空格：<code>SELECT TRIM(&#39; RUNOOB &#39;) AS TrimmedString;</code></td></tr><tr><td style="text-align:left;">UCASE(s)</td><td style="text-align:left;">将字符串转换为大写</td><td style="text-align:left;">将字符串 runoob 转换为大写：<code>SELECT UCASE(&quot;runoob&quot;); -- RUNOOB</code></td></tr><tr><td style="text-align:left;">UPPER(s)</td><td style="text-align:left;">将字符串转换为大写</td><td style="text-align:left;">将字符串 runoob 转换为大写：<code>SELECT UPPER(&quot;runoob&quot;); -- RUNOOB</code></td></tr></tbody></table></div><h3 id="数字函数" tabindex="-1"><a class="header-anchor" href="#数字函数" aria-hidden="true">#</a> 数字函数</h3><div class="table-wrapper"><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">ABS(x)</td><td style="text-align:left;">返回 x 的绝对值</td><td style="text-align:left;">返回 -1 的绝对值：<code>SELECT ABS(-1) -- 返回1</code></td></tr><tr><td style="text-align:left;">ACOS(x)</td><td style="text-align:left;">求 x 的反余弦值（单位为弧度），x 为一个数值</td><td style="text-align:left;"><code>SELECT ACOS(0.25);</code></td></tr><tr><td style="text-align:left;">ASIN(x)</td><td style="text-align:left;">求反正弦值（单位为弧度），x 为一个数值</td><td style="text-align:left;"><code>SELECT ASIN(0.25);</code></td></tr><tr><td style="text-align:left;">ATAN(x)</td><td style="text-align:left;">求反正切值（单位为弧度），x 为一个数值</td><td style="text-align:left;"><code>SELECT ATAN(2.5);</code></td></tr><tr><td style="text-align:left;">ATAN2(n, m)</td><td style="text-align:left;">求反正切值（单位为弧度）</td><td style="text-align:left;"><code>SELECT ATAN2(-0.8, 2);</code></td></tr><tr><td style="text-align:left;">AVG(expression)</td><td style="text-align:left;">返回一个表达式的平均值，expression 是一个字段</td><td style="text-align:left;">返回 Products 表中Price 字段的平均值：<code>SELECT AVG(Price) AS AveragePrice FROM Products;</code></td></tr><tr><td style="text-align:left;">CEIL(x)</td><td style="text-align:left;">返回大于或等于 x 的最小整数</td><td style="text-align:left;"><code>SELECT CEIL(1.5) -- 返回2</code></td></tr><tr><td style="text-align:left;">CEILING(x)</td><td style="text-align:left;">返回大于或等于 x 的最小整数</td><td style="text-align:left;"><code>SELECT CEILING(1.5); -- 返回2</code></td></tr><tr><td style="text-align:left;">COS(x)</td><td style="text-align:left;">求余弦值(参数是弧度)</td><td style="text-align:left;"><code>SELECT COS(2);</code></td></tr><tr><td style="text-align:left;">COT(x)</td><td style="text-align:left;">求余切值(参数是弧度)</td><td style="text-align:left;"><code>SELECT COT(6);</code></td></tr><tr><td style="text-align:left;">COUNT(expression)</td><td style="text-align:left;">返回查询的记录总数，expression 参数是一个字段或者 * 号</td><td style="text-align:left;">返回 Products 表中 products 字段总共有多少条记录：<code>SELECT COUNT(ProductID) AS NumberOfProducts FROM Products;</code></td></tr><tr><td style="text-align:left;">DEGREES(x)</td><td style="text-align:left;">将弧度转换为角度</td><td style="text-align:left;"><code>SELECT DEGREES(3.1415926535898) -- 180</code></td></tr><tr><td style="text-align:left;">n DIV m</td><td style="text-align:left;">整除，n 为被除数，m 为除数</td><td style="text-align:left;">计算 10 除于 5：<code>SELECT 10 DIV 5; -- 2</code></td></tr><tr><td style="text-align:left;">EXP(x)</td><td style="text-align:left;">返回 e 的 x 次方</td><td style="text-align:left;">计算 e 的三次方：<code>SELECT EXP(3) -- 20.085536923188</code></td></tr><tr><td style="text-align:left;">FLOOR(x)</td><td style="text-align:left;">返回小于或等于 x 的最大整数</td><td style="text-align:left;">小于或等于 1.5 的整数：<code>SELECT FLOOR(1.5) -- 返回1</code></td></tr><tr><td style="text-align:left;">GREATEST(expr1, expr2, expr3, ...)</td><td style="text-align:left;">返回列表中的最大值</td><td style="text-align:left;">返回以下数字列表中的最大值：<code>SELECT GREATEST(3, 12, 34, 8, 25); -- 34</code>返回以下字符串列表中的最大值：<code>SELECT GREATEST(&quot;Google&quot;, &quot;Runoob&quot;, &quot;Apple&quot;); -- Runoob</code></td></tr><tr><td style="text-align:left;">LEAST(expr1, expr2, expr3, ...)</td><td style="text-align:left;">返回列表中的最小值</td><td style="text-align:left;">返回以下数字列表中的最小值：<code>SELECT LEAST(3, 12, 34, 8, 25); -- 3</code>返回以下字符串列表中的最小值：<code>SELECT LEAST(&quot;Google&quot;, &quot;Runoob&quot;, &quot;Apple&quot;); -- Apple</code></td></tr><tr><td style="text-align:left;">LN</td><td style="text-align:left;">返回数字的自然对数，以 e 为底。</td><td style="text-align:left;">返回 2 的自然对数：<code>SELECT LN(2); -- 0.6931471805599453</code></td></tr><tr><td style="text-align:left;">LOG(x) 或 LOG(base, x)</td><td style="text-align:left;">返回自然对数(以 e 为底的对数)，如果带有 base 参数，则 base 为指定带底数。</td><td style="text-align:left;"><code>SELECT LOG(20.085536923188) -- 3 SELECT LOG(2, 4); -- 2</code></td></tr><tr><td style="text-align:left;">LOG10(x)</td><td style="text-align:left;">返回以 10 为底的对数</td><td style="text-align:left;"><code>SELECT LOG10(100) -- 2</code></td></tr><tr><td style="text-align:left;">LOG2(x)</td><td style="text-align:left;">返回以 2 为底的对数</td><td style="text-align:left;">返回以 2 为底 6 的对数：<code>SELECT LOG2(6); -- 2.584962500721156</code></td></tr><tr><td style="text-align:left;">MAX(expression)</td><td style="text-align:left;">返回字段 expression 中的最大值</td><td style="text-align:left;">返回数据表 Products 中字段 Price 的最大值：<code>SELECT MAX(Price) AS LargestPrice FROM Products;</code></td></tr><tr><td style="text-align:left;">MIN(expression)</td><td style="text-align:left;">返回字段 expression 中的最小值</td><td style="text-align:left;">返回数据表 Products 中字段 Price 的最小值：<code>SELECT MIN(Price) AS MinPrice FROM Products;</code></td></tr><tr><td style="text-align:left;">MOD(x,y)</td><td style="text-align:left;">返回 x 除以 y 以后的余数</td><td style="text-align:left;">5 除于 2 的余数：<code>SELECT MOD(5,2) -- 1</code></td></tr><tr><td style="text-align:left;">PI()</td><td style="text-align:left;">返回圆周率(3.141593）</td><td style="text-align:left;"><code>SELECT PI() --3.141593</code></td></tr><tr><td style="text-align:left;">POW(x,y)</td><td style="text-align:left;">返回 x 的 y 次方</td><td style="text-align:left;">2 的 3 次方：<code>SELECT POW(2,3) -- 8</code></td></tr><tr><td style="text-align:left;">POWER(x,y)</td><td style="text-align:left;">返回 x 的 y 次方</td><td style="text-align:left;">2 的 3 次方：<code>SELECT POWER(2,3) -- 8</code></td></tr><tr><td style="text-align:left;">RADIANS(x)</td><td style="text-align:left;">将角度转换为弧度</td><td style="text-align:left;">180 度转换为弧度：<code>SELECT RADIANS(180) -- 3.1415926535898</code></td></tr><tr><td style="text-align:left;">RAND()</td><td style="text-align:left;">返回 0 到 1 的随机数</td><td style="text-align:left;"><code>SELECT RAND() --0.93099315644334</code></td></tr><tr><td style="text-align:left;">ROUND(x [,y])</td><td style="text-align:left;">返回离 x 最近的整数，可选参数 y 表示要四舍五入的小数位数，如果省略，则返回整数。</td><td style="text-align:left;"><code>SELECT ROUND(1.23456) --1 SELECT ROUND(345.156, 2) -- 345.16</code></td></tr><tr><td style="text-align:left;">SIGN(x)</td><td style="text-align:left;">返回 x 的符号，x 是负数、0、正数分别返回 -1、0 和 1</td><td style="text-align:left;"><code>SELECT SIGN(-10) -- (-1)</code></td></tr><tr><td style="text-align:left;">SIN(x)</td><td style="text-align:left;">求正弦值(参数是弧度)</td><td style="text-align:left;"><code>SELECT SIN(RADIANS(30)) -- 0.5</code></td></tr><tr><td style="text-align:left;">SQRT(x)</td><td style="text-align:left;">返回x的平方根</td><td style="text-align:left;">25 的平方根：<code>SELECT SQRT(25) -- 5</code></td></tr><tr><td style="text-align:left;">SUM(expression)</td><td style="text-align:left;">返回指定字段的总和</td><td style="text-align:left;">计算 OrderDetails 表中字段 Quantity 的总和：<code>SELECT SUM(Quantity) AS TotalItemsOrdered FROM OrderDetails;</code></td></tr><tr><td style="text-align:left;">TAN(x)</td><td style="text-align:left;">求正切值(参数是弧度)</td><td style="text-align:left;"><code>SELECT TAN(1.75); -- -5.52037992250933</code></td></tr><tr><td style="text-align:left;">TRUNCATE(x,y)</td><td style="text-align:left;">返回数值 x 保留到小数点后 y 位的值（与 ROUND 最大的区别是不会进行四舍五入）</td><td style="text-align:left;"><code>SELECT TRUNCATE(1.23456,3) -- 1.234</code></td></tr></tbody></table></div><hr><h3 id="日期函数" tabindex="-1"><a class="header-anchor" href="#日期函数" aria-hidden="true">#</a> 日期函数</h3><div class="table-wrapper"><table><thead><tr><th style="text-align:left;">函数名</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">ADDDATE(d,n)</td><td style="text-align:left;">计算起始日期 d 加上 n 天的日期</td><td style="text-align:left;"><code>SELECT ADDDATE(&quot;2017-06-15&quot;, INTERVAL 10 DAY); -&gt;2017-06-25</code></td></tr><tr><td style="text-align:left;">ADDTIME(t,n)</td><td style="text-align:left;">n 是一个时间表达式，时间 t 加上时间表达式 n</td><td style="text-align:left;">加 5 秒：<code>SELECT ADDTIME(&#39;2011-11-11 11:11:11&#39;, 5); -&gt;2011-11-11 11:11:16 (秒)</code>添加 2 小时, 10 分钟, 5 秒:<code>SELECT ADDTIME(&quot;2020-06-15 09:34:21&quot;, &quot;2:10:5&quot;); -&gt; 2020-06-15 11:44:26</code></td></tr><tr><td style="text-align:left;">CURDATE()</td><td style="text-align:left;">返回当前日期</td><td style="text-align:left;"><code>SELECT CURDATE(); -&gt; 2018-09-19</code></td></tr><tr><td style="text-align:left;">CURRENT_DATE()</td><td style="text-align:left;">返回当前日期</td><td style="text-align:left;"><code>SELECT CURRENT_DATE(); -&gt; 2018-09-19</code></td></tr><tr><td style="text-align:left;">CURRENT_TIME</td><td style="text-align:left;">返回当前时间</td><td style="text-align:left;"><code>SELECT CURRENT_TIME(); -&gt; 19:59:02</code></td></tr><tr><td style="text-align:left;">CURRENT_TIMESTAMP()</td><td style="text-align:left;">返回当前日期和时间</td><td style="text-align:left;"><code>SELECT CURRENT_TIMESTAMP() -&gt; 2018-09-19 20:57:43</code></td></tr><tr><td style="text-align:left;">CURTIME()</td><td style="text-align:left;">返回当前时间</td><td style="text-align:left;"><code>SELECT CURTIME(); -&gt; 19:59:02</code></td></tr><tr><td style="text-align:left;">DATE()</td><td style="text-align:left;">从日期或日期时间表达式中提取日期值</td><td style="text-align:left;"><code>SELECT DATE(&quot;2017-06-15&quot;); -&gt; 2017-06-15</code></td></tr><tr><td style="text-align:left;">DATEDIFF(d1,d2)</td><td style="text-align:left;">计算日期 d1-&gt;d2 之间相隔的天数</td><td style="text-align:left;"><code>SELECT DATEDIFF(&#39;2001-01-01&#39;,&#39;2001-02-02&#39;) -&gt; -32</code></td></tr><tr><td style="text-align:left;">DATE_ADD(d，INTERVAL expr type)</td><td style="text-align:left;">计算起始日期 d 加上一个时间段后的日期，type 值可以是：MICROSECONDSECONDMINUTEHOURDAYWEEKMONTHQUARTERYEARSECOND_MICROSECONDMINUTE_MICROSECONDMINUTE_SECONDHOUR_MICROSECONDHOUR_SECONDHOUR_MINUTEDAY_MICROSECONDDAY_SECONDDAY_MINUTEDAY_HOURYEAR_MONTH</td><td style="text-align:left;"><code>SELECT DATE_ADD(&quot;2017-06-15&quot;, INTERVAL 10 DAY); -&gt; 2017-06-25 SELECT DATE_ADD(&quot;2017-06-15 09:34:21&quot;, INTERVAL 15 MINUTE); -&gt; 2017-06-15 09:49:21 SELECT DATE_ADD(&quot;2017-06-15 09:34:21&quot;, INTERVAL -3 HOUR); -&gt;2017-06-15 06:34:21 SELECT DATE_ADD(&quot;2017-06-15 09:34:21&quot;, INTERVAL -3 MONTH); -&gt;2017-04-15</code></td></tr><tr><td style="text-align:left;">DATE_FORMAT(d,f)</td><td style="text-align:left;">按表达式 f的要求显示日期 d</td><td style="text-align:left;"><code>SELECT DATE_FORMAT(&#39;2011-11-11 11:11:11&#39;,&#39;%Y-%m-%d %r&#39;) -&gt; 2011-11-11 11:11:11 AM</code></td></tr><tr><td style="text-align:left;">DATE_SUB(date,INTERVAL expr type)</td><td style="text-align:left;">函数从日期减去指定的时间间隔。</td><td style="text-align:left;">Orders 表中 OrderDate 字段减去 2 天：<code>SELECT OrderId,DATE_SUB(OrderDate,INTERVAL 2 DAY) AS OrderPayDate FROM Orders</code></td></tr><tr><td style="text-align:left;">DAY(d)</td><td style="text-align:left;">返回日期值 d 的日期部分</td><td style="text-align:left;"><code>SELECT DAY(&quot;2017-06-15&quot;); -&gt; 15</code></td></tr><tr><td style="text-align:left;">DAYNAME(d)</td><td style="text-align:left;">返回日期 d 是星期几，如 Monday,Tuesday</td><td style="text-align:left;"><code>SELECT DAYNAME(&#39;2011-11-11 11:11:11&#39;) -&gt;Friday</code></td></tr><tr><td style="text-align:left;">DAYOFMONTH(d)</td><td style="text-align:left;">计算日期 d 是本月的第几天</td><td style="text-align:left;"><code>SELECT DAYOFMONTH(&#39;2011-11-11 11:11:11&#39;) -&gt;11</code></td></tr><tr><td style="text-align:left;">DAYOFWEEK(d)</td><td style="text-align:left;">日期 d 今天是星期几，1 星期日，2 星期一，以此类推</td><td style="text-align:left;"><code>SELECT DAYOFWEEK(&#39;2011-11-11 11:11:11&#39;) -&gt;6</code></td></tr><tr><td style="text-align:left;">DAYOFYEAR(d)</td><td style="text-align:left;">计算日期 d 是本年的第几天</td><td style="text-align:left;"><code>SELECT DAYOFYEAR(&#39;2011-11-11 11:11:11&#39;) -&gt;315</code></td></tr><tr><td style="text-align:left;">EXTRACT(type FROM d)</td><td style="text-align:left;">从日期 d 中获取指定的值，type 指定返回的值。 type可取值为： MICROSECONDSECONDMINUTEHOURDAYWEEKMONTHQUARTERYEARSECOND_MICROSECONDMINUTE_MICROSECONDMINUTE_SECONDHOUR_MICROSECONDHOUR_SECONDHOUR_MINUTEDAY_MICROSECONDDAY_SECONDDAY_MINUTEDAY_HOURYEAR_MONTH</td><td style="text-align:left;"><code>SELECT EXTRACT(MINUTE FROM &#39;2011-11-11 11:11:11&#39;) -&gt; 11</code></td></tr><tr><td style="text-align:left;">FROM_DAYS(n)</td><td style="text-align:left;">计算从 0000 年 1 月 1 日开始 n 天后的日期</td><td style="text-align:left;"><code>SELECT FROM_DAYS(1111) -&gt; 0003-01-16</code></td></tr><tr><td style="text-align:left;">HOUR(t)</td><td style="text-align:left;">返回 t 中的小时值</td><td style="text-align:left;"><code>SELECT HOUR(&#39;1:2:3&#39;) -&gt; 1</code></td></tr><tr><td style="text-align:left;">LAST_DAY(d)</td><td style="text-align:left;">返回给给定日期的那一月份的最后一天</td><td style="text-align:left;"><code>SELECT LAST_DAY(&quot;2017-06-20&quot;); -&gt; 2017-06-30</code></td></tr><tr><td style="text-align:left;">LOCALTIME()</td><td style="text-align:left;">返回当前日期和时间</td><td style="text-align:left;"><code>SELECT LOCALTIME() -&gt; 2018-09-19 20:57:43</code></td></tr><tr><td style="text-align:left;">LOCALTIMESTAMP()</td><td style="text-align:left;">返回当前日期和时间</td><td style="text-align:left;"><code>SELECT LOCALTIMESTAMP() -&gt; 2018-09-19 20:57:43</code></td></tr><tr><td style="text-align:left;">MAKEDATE(year, day-of-year)</td><td style="text-align:left;">基于给定参数年份 year 和所在年中的天数序号 day-of-year 返回一个日期</td><td style="text-align:left;"><code>SELECT MAKEDATE(2017, 3); -&gt; 2017-01-03</code></td></tr><tr><td style="text-align:left;">MAKETIME(hour, minute, second)</td><td style="text-align:left;">组合时间，参数分别为小时、分钟、秒</td><td style="text-align:left;"><code>SELECT MAKETIME(11, 35, 4); -&gt; 11:35:04</code></td></tr><tr><td style="text-align:left;">MICROSECOND(date)</td><td style="text-align:left;">返回日期参数所对应的微秒数</td><td style="text-align:left;"><code>SELECT MICROSECOND(&quot;2017-06-20 09:34:00.000023&quot;); -&gt; 23</code></td></tr><tr><td style="text-align:left;">MINUTE(t)</td><td style="text-align:left;">返回 t 中的分钟值</td><td style="text-align:left;"><code>SELECT MINUTE(&#39;1:2:3&#39;) -&gt; 2</code></td></tr><tr><td style="text-align:left;">MONTHNAME(d)</td><td style="text-align:left;">返回日期当中的月份名称，如 November</td><td style="text-align:left;"><code>SELECT MONTHNAME(&#39;2011-11-11 11:11:11&#39;) -&gt; November</code></td></tr><tr><td style="text-align:left;">MONTH(d)</td><td style="text-align:left;">返回日期d中的月份值，1 到 12</td><td style="text-align:left;"><code>SELECT MONTH(&#39;2011-11-11 11:11:11&#39;) -&gt;11</code></td></tr><tr><td style="text-align:left;">NOW()</td><td style="text-align:left;">返回当前日期和时间</td><td style="text-align:left;"><code>SELECT NOW() -&gt; 2018-09-19 20:57:43</code></td></tr><tr><td style="text-align:left;">PERIOD_ADD(period, number)</td><td style="text-align:left;">为 年-月 组合日期添加一个时段</td><td style="text-align:left;"><code>SELECT PERIOD_ADD(201703, 5); -&gt; 201708</code></td></tr><tr><td style="text-align:left;">PERIOD_DIFF(period1, period2)</td><td style="text-align:left;">返回两个时段之间的月份差值</td><td style="text-align:left;"><code>SELECT PERIOD_DIFF(201710, 201703); -&gt; 7</code></td></tr><tr><td style="text-align:left;">QUARTER(d)</td><td style="text-align:left;">返回日期d是第几季节，返回 1 到 4</td><td style="text-align:left;"><code>SELECT QUARTER(&#39;2011-11-11 11:11:11&#39;) -&gt; 4</code></td></tr><tr><td style="text-align:left;">SECOND(t)</td><td style="text-align:left;">返回 t 中的秒钟值</td><td style="text-align:left;"><code>SELECT SECOND(&#39;1:2:3&#39;) -&gt; 3</code></td></tr><tr><td style="text-align:left;">SEC_TO_TIME(s)</td><td style="text-align:left;">将以秒为单位的时间 s 转换为时分秒的格式</td><td style="text-align:left;"><code>SELECT SEC_TO_TIME(4320) -&gt; 01:12:00</code></td></tr><tr><td style="text-align:left;">STR_TO_DATE(string, format_mask)</td><td style="text-align:left;">将字符串转变为日期</td><td style="text-align:left;"><code>SELECT STR_TO_DATE(&quot;August 10 2017&quot;, &quot;%M %d %Y&quot;); -&gt; 2017-08-10</code></td></tr><tr><td style="text-align:left;">SUBDATE(d,n)</td><td style="text-align:left;">日期 d 减去 n 天后的日期</td><td style="text-align:left;"><code>SELECT SUBDATE(&#39;2011-11-11 11:11:11&#39;, 1) -&gt;2011-11-10 11:11:11 (默认是天)</code></td></tr><tr><td style="text-align:left;">SUBTIME(t,n)</td><td style="text-align:left;">时间 t 减去 n 秒的时间</td><td style="text-align:left;"><code>SELECT SUBTIME(&#39;2011-11-11 11:11:11&#39;, 5) -&gt;2011-11-11 11:11:06 (秒)</code></td></tr><tr><td style="text-align:left;">SYSDATE()</td><td style="text-align:left;">返回当前日期和时间</td><td style="text-align:left;"><code>SELECT SYSDATE() -&gt; 2018-09-19 20:57:43</code></td></tr><tr><td style="text-align:left;">TIME(expression)</td><td style="text-align:left;">提取传入表达式的时间部分</td><td style="text-align:left;"><code>SELECT TIME(&quot;19:30:10&quot;); -&gt; 19:30:10</code></td></tr><tr><td style="text-align:left;">TIME_FORMAT(t,f)</td><td style="text-align:left;">按表达式 f 的要求显示时间 t</td><td style="text-align:left;"><code>SELECT TIME_FORMAT(&#39;11:11:11&#39;,&#39;%r&#39;) 11:11:11 AM</code></td></tr><tr><td style="text-align:left;">TIME_TO_SEC(t)</td><td style="text-align:left;">将时间 t 转换为秒</td><td style="text-align:left;"><code>SELECT TIME_TO_SEC(&#39;1:12:00&#39;) -&gt; 4320</code></td></tr><tr><td style="text-align:left;">TIMEDIFF(time1, time2)</td><td style="text-align:left;">计算时间差值</td><td style="text-align:left;"><code>mysql&gt; SELECT TIMEDIFF(&quot;13:10:11&quot;, &quot;13:10:10&quot;); -&gt; 00:00:01 mysql&gt; SELECT TIMEDIFF(&#39;2000:01:01 00:00:00&#39;, -&gt; &#39;2000:01:01 00:00:00.000001&#39;); -&gt; &#39;-00:00:00.000001&#39; mysql&gt; SELECT TIMEDIFF(&#39;2008-12-31 23:59:59.000001&#39;, -&gt; &#39;2008-12-30 01:01:01.000002&#39;); -&gt; &#39;46:58:57.999999&#39;</code></td></tr><tr><td style="text-align:left;">TIMESTAMP(expression, interval)</td><td style="text-align:left;">单个参数时，函数返回日期或日期时间表达式；有2个参数时，将参数加和</td><td style="text-align:left;"><code>mysql&gt; SELECT TIMESTAMP(&quot;2017-07-23&quot;, &quot;13:10:11&quot;); -&gt; 2017-07-23 13:10:11 mysql&gt; SELECT TIMESTAMP(&#39;2003-12-31&#39;); -&gt; &#39;2003-12-31 00:00:00&#39; mysql&gt; SELECT TIMESTAMP(&#39;2003-12-31 12:00:00&#39;,&#39;12:00:00&#39;); -&gt; &#39;2004-01-01 00:00:00&#39;</code></td></tr><tr><td style="text-align:left;">TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2)</td><td style="text-align:left;">计算时间差，返回 datetime_expr2 − datetime_expr1 的时间差</td><td style="text-align:left;"><code>mysql&gt; SELECT TIMESTAMPDIFF(DAY,&#39;2003-02-01&#39;,&#39;2003-05-01&#39;); // 计算两个时间相隔多少天 -&gt; 89 mysql&gt; SELECT TIMESTAMPDIFF(MONTH,&#39;2003-02-01&#39;,&#39;2003-05-01&#39;); // 计算两个时间相隔多少月 -&gt; 3 mysql&gt; SELECT TIMESTAMPDIFF(YEAR,&#39;2002-05-01&#39;,&#39;2001-01-01&#39;); // 计算两个时间相隔多少年 -&gt; -1 mysql&gt; SELECT TIMESTAMPDIFF(MINUTE,&#39;2003-02-01&#39;,&#39;2003-05-01 12:05:55&#39;); // 计算两个时间相隔多少分钟 -&gt; 128885</code></td></tr><tr><td style="text-align:left;">TO_DAYS(d)</td><td style="text-align:left;">计算日期 d 距离 0000 年 1 月 1 日的天数</td><td style="text-align:left;"><code>SELECT TO_DAYS(&#39;0001-01-01 01:01:01&#39;) -&gt; 366</code></td></tr><tr><td style="text-align:left;">WEEK(d)</td><td style="text-align:left;">计算日期 d 是本年的第几个星期，范围是 0 到 53</td><td style="text-align:left;"><code>SELECT WEEK(&#39;2011-11-11 11:11:11&#39;) -&gt; 45</code></td></tr><tr><td style="text-align:left;">WEEKDAY(d)</td><td style="text-align:left;">日期 d 是星期几，0 表示星期一，1 表示星期二</td><td style="text-align:left;"><code>SELECT WEEKDAY(&quot;2017-06-15&quot;); -&gt; 3</code></td></tr><tr><td style="text-align:left;">WEEKOFYEAR(d)</td><td style="text-align:left;">计算日期 d 是本年的第几个星期，范围是 0 到 53</td><td style="text-align:left;"><code>SELECT WEEKOFYEAR(&#39;2011-11-11 11:11:11&#39;) -&gt; 45</code></td></tr><tr><td style="text-align:left;">YEAR(d)</td><td style="text-align:left;">返回年份</td><td style="text-align:left;"><code>SELECT YEAR(&quot;2017-06-15&quot;); -&gt; 2017</code></td></tr><tr><td style="text-align:left;">YEARWEEK(date, mode)</td><td style="text-align:left;">返回年份及第几周（0到53），mode 中 0 表示周天，1表示周一，以此类推</td><td style="text-align:left;"><code>SELECT YEARWEEK(&quot;2017-06-15&quot;); -&gt; 201724</code></td></tr></tbody></table></div><h3 id="高级函数" tabindex="-1"><a class="header-anchor" href="#高级函数" aria-hidden="true">#</a> 高级函数</h3>',9),De={class:"table-wrapper"},Me=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"函数名"),t("th",{style:{"text-align":"left"}},"描述"),t("th",{style:{"text-align":"left"}},"实例")])],-1),Ue=t("tr",null,[t("td",{style:{"text-align":"left"}},"BIN(x)"),t("td",{style:{"text-align":"left"}},"返回 x 的二进制编码"),t("td",{style:{"text-align":"left"}},[e("15 的 2 进制编码:"),t("code",null,"SELECT BIN(15); -- 1111")])],-1),Fe=t("tr",null,[t("td",{style:{"text-align":"left"}},"BINARY(s)"),t("td",{style:{"text-align":"left"}},"将字符串 s 转换为二进制字符串"),t("td",{style:{"text-align":"left"}},[t("code",null,'SELECT BINARY "RUNOOB"; -> RUNOOB')])],-1),ke=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"CASE expression WHEN condition1 THEN result1 WHEN condition2 THEN result2 ... WHEN conditionN THEN resultN ELSE result END")]),t("td",{style:{"text-align":"left"}},"CASE 表示函数开始，END 表示函数结束。如果 condition1 成立，则返回 result1, 如果 condition2 成立，则返回 result2，当全部不成立则返回 result，而当有一个成立之后，后面的就不执行了。"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT CASE 　WHEN 1 > 0 　THEN '1 > 0' 　WHEN 2 > 0 　THEN '2 > 0' 　ELSE '3 > 0' 　END ->1 > 0")])],-1),Pe=t("tr",null,[t("td",{style:{"text-align":"left"}},"CAST(x AS type)"),t("td",{style:{"text-align":"left"}},"转换数据类型"),t("td",{style:{"text-align":"left"}},[e("字符串日期转换为日期："),t("code",null,'SELECT CAST("2017-08-29" AS DATE); -> 2017-08-29')])],-1),Be=t("tr",null,[t("td",{style:{"text-align":"left"}},"COALESCE(expr1, expr2, ...., expr_n)"),t("td",{style:{"text-align":"left"}},"返回参数中的第一个非空表达式（从左向右）"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT COALESCE(NULL, NULL, NULL, 'runoob.com', NULL, 'google.com'); -> runoob.com")])],-1),Ye=t("tr",null,[t("td",{style:{"text-align":"left"}},"CONNECTION_ID()"),t("td",{style:{"text-align":"left"}},"返回唯一的连接 ID"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT CONNECTION_ID(); -> 4292835")])],-1),He=t("tr",null,[t("td",{style:{"text-align":"left"}},"CONV(x,f1,f2)"),t("td",{style:{"text-align":"left"}},"返回 f1 进制数变成 f2 进制数"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT CONV(15, 10, 2); -> 1111")])],-1),Ge=t("tr",null,[t("td",{style:{"text-align":"left"}},"CONVERT(s USING cs)"),t("td",{style:{"text-align":"left"}},"函数将字符串 s 的字符集变成 cs"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT CHARSET('ABC') ->utf-8 SELECT CHARSET(CONVERT('ABC' USING gbk)) ->gbk")])],-1),We=t("tr",null,[t("td",{style:{"text-align":"left"}},"CURRENT_USER()"),t("td",{style:{"text-align":"left"}},"返回当前用户"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT CURRENT_USER(); -> guest@%")])],-1),ve=t("tr",null,[t("td",{style:{"text-align":"left"}},"DATABASE()"),t("td",{style:{"text-align":"left"}},"返回当前数据库名"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT DATABASE(); -> runoob")])],-1),Ve=t("tr",null,[t("td",{style:{"text-align":"left"}},"IF(expr,v1,v2)"),t("td",{style:{"text-align":"left"}},"如果表达式 expr 成立，返回结果 v1；否则，返回结果 v2。"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT IF(1 > 0,'正确','错误') ->正确")])],-1),Xe={style:{"text-align":"left"}},we={href:"https://www.runoob.com/mysql/mysql-func-ifnull.html",target:"_blank",rel:"noopener noreferrer"},Ke=t("td",{style:{"text-align":"left"}},"如果 v1 的值不为 NULL，则返回 v1，否则返回 v2。",-1),Je=t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT IFNULL(null,'Hello Word') ->Hello Word")],-1),Qe=t("tr",null,[t("td",{style:{"text-align":"left"}},"ISNULL(expression)"),t("td",{style:{"text-align":"left"}},"判断表达式是否为 NULL"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT ISNULL(NULL); ->1")])],-1),$e=t("tr",null,[t("td",{style:{"text-align":"left"}},"LAST_INSERT_ID()"),t("td",{style:{"text-align":"left"}},"返回最近生成的 AUTO_INCREMENT 值"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT LAST_INSERT_ID(); ->6")])],-1),je=t("tr",null,[t("td",{style:{"text-align":"left"}},"NULLIF(expr1, expr2)"),t("td",{style:{"text-align":"left"}},"比较两个字符串，如果字符串 expr1 与 expr2 相等 返回 NULL，否则返回 expr1"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT NULLIF(25, 25); ->")])],-1),ze=t("tr",null,[t("td",{style:{"text-align":"left"}},"SESSION_USER()"),t("td",{style:{"text-align":"left"}},"返回当前用户"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT SESSION_USER(); -> guest@%")])],-1),Ze=t("tr",null,[t("td",{style:{"text-align":"left"}},"SYSTEM_USER()"),t("td",{style:{"text-align":"left"}},"返回当前用户"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT SYSTEM_USER(); -> guest@%")])],-1),tl=t("tr",null,[t("td",{style:{"text-align":"left"}},"USER()"),t("td",{style:{"text-align":"left"}},"返回当前用户"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT USER(); -> guest@%")])],-1),el=t("tr",null,[t("td",{style:{"text-align":"left"}},"VERSION()"),t("td",{style:{"text-align":"left"}},"返回数据库的版本号"),t("td",{style:{"text-align":"left"}},[t("code",null,"SELECT VERSION() -> 5.6.34")])],-1),ll=n('<h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><p>以下是 MySQL 8.0 版本新增的一些常用函数：</p><div class="table-wrapper"><table><thead><tr><th style="text-align:left;">函数</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">JSON_OBJECT()</td><td style="text-align:left;">将键值对转换为 JSON 对象</td><td style="text-align:left;"><code>SELECT JSON_OBJECT(&#39;key1&#39;, &#39;value1&#39;, &#39;key2&#39;, &#39;value2&#39;)</code></td></tr><tr><td style="text-align:left;">JSON_ARRAY()</td><td style="text-align:left;">将值转换为 JSON 数组</td><td style="text-align:left;"><code>SELECT JSON_ARRAY(1, 2, &#39;three&#39;)</code></td></tr><tr><td style="text-align:left;">JSON_EXTRACT()</td><td style="text-align:left;">从 JSON 字符串中提取指定的值</td><td style="text-align:left;"><code>SELECT JSON_EXTRACT(&#39;{&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30}&#39;, &#39;$.name&#39;)</code></td></tr><tr><td style="text-align:left;">JSON_CONTAINS()</td><td style="text-align:left;">检查一个 JSON 字符串是否包含指定的值</td><td style="text-align:left;"><code>SELECT JSON_CONTAINS(&#39;{&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30}&#39;, &#39;John&#39;, &#39;$.name&#39;)</code></td></tr><tr><td style="text-align:left;">ROW_NUMBER()</td><td style="text-align:left;">为查询结果中的每一行分配一个唯一的数字</td><td style="text-align:left;"><code>SELECT ROW_NUMBER() OVER(ORDER BY id) AS row_number, name FROM users</code></td></tr><tr><td style="text-align:left;">RANK()</td><td style="text-align:left;">为查询结果中的每一行分配一个排名</td><td style="text-align:left;"><code>SELECT RANK() OVER(ORDER BY score DESC) AS rank, name, score FROM students</code></td></tr></tbody></table></div>',3);function dl(nl,ol){const l=a("ExternalLinkIcon");return r(),s("div",null,[E,t("div",c,[t("table",null,[g,t("tbody",null,[t("tr",null,[t("td",null,[t("a",f,[e("ABS"),d(l)])]),x]),t("tr",null,[t("td",null,[t("a",y,[e("SQRT"),d(l)])]),h]),t("tr",null,[t("td",null,[t("a",_,[e("MOD"),d(l)])]),u]),t("tr",null,[t("td",null,[t("a",T,[e("CEIL 和 CEILING"),d(l)])]),S]),t("tr",null,[t("td",null,[t("a",C,[e("FLOOR"),d(l)])]),A]),t("tr",null,[t("td",null,[t("a",N,[e("RAND"),d(l)])]),O]),t("tr",null,[t("td",null,[t("a",L,[e("ROUND"),d(l)])]),R]),t("tr",null,[t("td",null,[t("a",b,[e("SIGN"),d(l)])]),I]),t("tr",null,[t("td",null,[t("a",m,[e("POW 和 POWER"),d(l)])]),p]),t("tr",null,[t("td",null,[t("a",q,[e("SIN"),d(l)])]),D]),t("tr",null,[t("td",null,[t("a",M,[e("ASIN"),d(l)])]),U]),t("tr",null,[t("td",null,[t("a",F,[e("COS"),d(l)])]),k]),t("tr",null,[t("td",null,[t("a",P,[e("ACOS"),d(l)])]),B]),t("tr",null,[t("td",null,[t("a",Y,[e("TAN"),d(l)])]),H]),t("tr",null,[t("td",null,[t("a",G,[e("ATAN"),d(l)])]),W]),t("tr",null,[t("td",null,[t("a",v,[e("COT"),d(l)])]),V])])])]),X,t("div",w,[t("table",null,[K,t("tbody",null,[t("tr",null,[t("td",null,[t("a",J,[e("LENGTH"),d(l)])]),Q]),t("tr",null,[t("td",null,[t("a",$,[e("CONCAT"),d(l)])]),j]),t("tr",null,[t("td",null,[t("a",z,[e("INSERT"),d(l)])]),Z]),t("tr",null,[t("td",null,[t("a",tt,[e("LOWER"),d(l)])]),et]),t("tr",null,[t("td",null,[t("a",lt,[e("UPPER"),d(l)])]),dt]),t("tr",null,[t("td",null,[t("a",nt,[e("LEFT"),d(l)])]),ot]),t("tr",null,[t("td",null,[t("a",rt,[e("RIGHT"),d(l)])]),st]),t("tr",null,[t("td",null,[t("a",at,[e("TRIM"),d(l)])]),it]),t("tr",null,[t("td",null,[t("a",Et,[e("REPLACE"),d(l)])]),ct]),t("tr",null,[t("td",null,[t("a",gt,[e("SUBSTRING"),d(l)])]),ft]),t("tr",null,[t("td",null,[t("a",xt,[e("REVERSE"),d(l)])]),yt])])])]),ht,t("div",_t,[t("table",null,[ut,t("tbody",null,[t("tr",null,[t("td",null,[t("a",Tt,[e("CURDATE 和 CURRENT_DATE"),d(l)])]),St]),t("tr",null,[t("td",null,[t("a",Ct,[e("CURTIME 和 CURRENT_TIME"),d(l)])]),At]),t("tr",null,[t("td",null,[t("a",Nt,[e("NOW 和 SYSDATE"),d(l)])]),Ot]),t("tr",null,[t("td",null,[t("a",Lt,[e("UNIX_TIMESTAMP"),d(l)])]),Rt]),t("tr",null,[t("td",null,[t("a",bt,[e("FROM_UNIXTIME"),d(l)])]),It]),t("tr",null,[t("td",null,[t("a",mt,[e("MONTH"),d(l)])]),pt]),t("tr",null,[t("td",null,[t("a",qt,[e("MONTHNAME"),d(l)])]),Dt]),t("tr",null,[t("td",null,[t("a",Mt,[e("DAYNAME"),d(l)])]),Ut]),t("tr",null,[t("td",null,[t("a",Ft,[e("DAYOFWEEK"),d(l)])]),kt]),t("tr",null,[t("td",null,[t("a",Pt,[e("WEEK"),d(l)])]),Bt]),t("tr",null,[t("td",null,[t("a",Yt,[e("DAYOFYEAR"),d(l)])]),Ht]),t("tr",null,[t("td",null,[t("a",Gt,[e("DAYOFMONTH"),d(l)])]),Wt]),t("tr",null,[t("td",null,[t("a",vt,[e("YEAR"),d(l)])]),Vt]),t("tr",null,[t("td",null,[t("a",Xt,[e("TIME_TO_SEC"),d(l)])]),wt]),t("tr",null,[t("td",null,[t("a",Kt,[e("SEC_TO_TIME"),d(l)])]),Jt]),t("tr",null,[t("td",null,[t("a",Qt,[e("DATE_ADD 和 ADDDATE"),d(l)])]),$t]),t("tr",null,[t("td",null,[t("a",jt,[e("DATE_SUB 和 SUBDATE"),d(l)])]),zt]),t("tr",null,[t("td",null,[t("a",Zt,[e("ADDTIME"),d(l)])]),te]),t("tr",null,[t("td",null,[t("a",ee,[e("SUBTIME"),d(l)])]),le]),t("tr",null,[t("td",null,[t("a",de,[e("DATEDIFF"),d(l)])]),ne]),t("tr",null,[t("td",null,[t("a",oe,[e("DATE_FORMAT"),d(l)])]),re]),t("tr",null,[t("td",null,[t("a",se,[e("WEEKDAY"),d(l)])]),ae])])])]),ie,t("div",Ee,[t("table",null,[ce,t("tbody",null,[t("tr",null,[t("td",null,[t("a",ge,[e("MAX"),d(l)])]),fe]),t("tr",null,[t("td",null,[t("a",xe,[e("MIN"),d(l)])]),ye]),t("tr",null,[t("td",null,[t("a",he,[e("COUNT"),d(l)])]),_e]),t("tr",null,[t("td",null,[t("a",ue,[e("SUM"),d(l)])]),Te]),t("tr",null,[t("td",null,[t("a",Se,[e("AVG"),d(l)])]),Ce])])])]),Ae,t("div",Ne,[t("table",null,[Oe,t("tbody",null,[t("tr",null,[t("td",null,[t("a",Le,[e("IF"),d(l)])]),Re]),t("tr",null,[t("td",null,[t("a",be,[e("IFNULL"),d(l)])]),Ie]),t("tr",null,[t("td",null,[t("a",me,[e("CASE"),d(l)])]),pe])])])]),qe,t("div",De,[t("table",null,[Me,t("tbody",null,[Ue,Fe,ke,Pe,Be,Ye,He,Ge,We,ve,Ve,t("tr",null,[t("td",Xe,[t("a",we,[e("IFNULL(v1,v2)"),d(l)])]),Ke,Je]),Qe,$e,je,ze,Ze,tl,el])])]),ll])}const sl=o(i,[["render",dl],["__file","X-MySQL函数.html.vue"]]);export{sl as default};
