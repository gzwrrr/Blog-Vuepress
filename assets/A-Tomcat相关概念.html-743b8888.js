import{_ as l,Q as c,S as n,U as a,W as i,X as o,a8 as e,a9 as r,H as s}from"./framework-d7e1aa10.js";const d={},h=a("h1",{id:"tomcat-相关概念",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#tomcat-相关概念","aria-hidden":"true"},"#"),e(" Tomcat 相关概念")],-1),u={class:"table-of-contents"},m=r('<h2 id="客户端与服务端交互" tabindex="-1"><a class="header-anchor" href="#客户端与服务端交互" aria-hidden="true">#</a> 客户端与服务端交互</h2><p>涉及到：</p><ol><li>HTTP 协议</li><li>Socket 客户端套接字与 ServerSocket 服务端套接字，用于数据传输</li></ol><h2 id="基本组件" tabindex="-1"><a class="header-anchor" href="#基本组件" aria-hidden="true">#</a> 基本组件</h2><p>Web 容器必须包含的组件</p><ol><li>Request：浏览器发起的 HTTP 请求</li><li>Response：处理请求后的响应，即服务器对 HTTP 请求的响应</li><li>HttpServer：服务端</li><li>ServletProcessor：对请求和响应进行加工</li></ol><h2 id="架构" tabindex="-1"><a class="header-anchor" href="#架构" aria-hidden="true">#</a> 架构</h2><figure><img src="https://www.pdai.tech/images/tomcat/tomcat-x-design-2-1.jpeg" alt="Tomcat架构" tabindex="0" loading="lazy"><figcaption>Tomcat架构</figcaption></figure><p>从功能上划分出来的 Tomcat 的主要模块</p><ol><li>Catalina 模块：包含应用服务器核心：Server、Service、Host、Connector、Context、Session及Cluster</li><li>Connector 模块：Web 模块</li><li>Resource 模块：包含资源文件，不包含 Java 源代码，但是是 Tomcat 运行必需的</li></ol><p>绝大多数组件实现了Lifecycle接口，这也就是我们所说的基于生命周期。生命周期的各个阶段的触发又是基于事件的方式。</p><h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h2><figure><img src="https://www.pdai.tech/images/tomcat/tomcat-x-start-1.png" alt="Tomcat启动" tabindex="0" loading="lazy"><figcaption>Tomcat启动</figcaption></figure><ol><li>Tomcat 源码编译后 bin 目录下的 catalina.bat 最终会执行 Bootstrap 类中的main方法，以此启动参数</li><li>我们可以通过设定不同的参数让tomcat以不同的方式运行</li></ol>',14);function _(f,p){const t=s("router-link");return c(),n("div",null,[h,a("nav",u,[a("ul",null,[a("li",null,[i(t,{to:"#tomcat-相关概念"},{default:o(()=>[e("Tomcat 相关概念")]),_:1}),a("ul",null,[a("li",null,[i(t,{to:"#客户端与服务端交互"},{default:o(()=>[e("客户端与服务端交互")]),_:1})]),a("li",null,[i(t,{to:"#基本组件"},{default:o(()=>[e("基本组件")]),_:1})]),a("li",null,[i(t,{to:"#架构"},{default:o(()=>[e("架构")]),_:1})]),a("li",null,[i(t,{to:"#启动"},{default:o(()=>[e("启动")]),_:1})])])])])]),m])}const g=l(d,[["render",_],["__file","A-Tomcat相关概念.html.vue"]]);export{g as default};
