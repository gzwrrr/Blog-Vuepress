import{_ as t,Q as e,S as l,a9 as n}from"./framework-d7e1aa10.js";const a={},r=n('<h1 id="服务降级-sentinel" tabindex="-1"><a class="header-anchor" href="#服务降级-sentinel" aria-hidden="true">#</a> 服务降级-Sentinel</h1><blockquote><p>独立的组件，有 Web 界面，可以更加细粒度地配置</p></blockquote><figure><img src="https://my-photos-1.oss-cn-hangzhou.aliyuncs.com/markdown//分布式组件/20230210/sentinel.png" alt="image-20221023112720793" tabindex="0" loading="lazy"><figcaption>image-20221023112720793</figcaption></figure><p>流控规则</p><div class="table-wrapper"><table><thead><tr><th style="text-align:center;">序号</th><th style="text-align:center;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">资源名</td><td style="text-align:left;">唯一名称，默认为请求路径</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">针对来源</td><td style="text-align:left;">Sentinel 可以针对调用者进行限流，填写微服务名称，默认为 default（不区分来源）</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">阈值类型/单机阈值</td><td style="text-align:left;">1. QPS（每秒请求数量）：当调用该 API 的 QPS 达到阈值时进行限流<br>2. 线程数：当调用该 API 的线程数达到阈值时进行限流</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">是否集群</td><td style="text-align:left;">不需要集群</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">流控模式</td><td style="text-align:left;">1. 直接：API 达到限流条件时直接限流<br>2. 关联：当关联的资源达到阈值时，限流自己（A 关联 B，B 达到阈值，A 挂）<br>3. 链路：只记录指定链路上的流量（API 级别），即指定资源入口进来的流量，如果达到阈值就进行限流</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;">流控效果</td><td style="text-align:left;">1. 快速失败：直接失败抛异常<br>2. Warm up：根据 codeFactor（冷加载因子，默认 3）的值，从阈值/codeFactor，进过预热时长才达到设置的 QPS 阈值<br>3. 排队等待：让请求匀速通过，阈值类型必须设置成 QPS 否则无效</td></tr></tbody></table></div><h2 id="降级规则" tabindex="-1"><a class="header-anchor" href="#降级规则" aria-hidden="true">#</a> 降级规则</h2><blockquote><p>Sentinel 熔断降级会在调用链路中某个资源出现不稳定时，对这个资源的调用进行限制，让请求快速失败，避免影响到其他的资源二导致级联错误；当资源被降级后，在接下来的降级时间窗口内，对该资源的调用都自动熔断（默认是抛出 DegradeException）</p></blockquote><div class="table-wrapper"><table><thead><tr><th style="text-align:center;">序号</th><th style="text-align:center;">属性</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">RT（平均响应时间，秒级）</td><td style="text-align:center;">超出阈值且在时间窗口内通过的请求大于等于 5 时，触发降级<br>窗口期过后关闭断路器<br>RT 最大为 4900（更大的需要设置 -Dcsp.sentinel.statistic.max.rt=xxx）</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">异常比例（秒级）</td><td style="text-align:center;">QPS 大于等于 5 且异常比例（秒级统计）超过阈值时，触发降级<br>时间窗口结束后，关闭降级</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">异常数（分钟级）</td><td style="text-align:center;">异常数（分钟统计）超过阈值时，触发降级<br>时间窗口结束后，关闭降级</td></tr></tbody></table></div><br><h2 id="热点规则" tabindex="-1"><a class="header-anchor" href="#热点规则" aria-hidden="true">#</a> 热点规则</h2><blockquote><p>TODO</p></blockquote>',11),d=[r];function i(s,c){return e(),l("div",null,d)}const x=t(a,[["render",i],["__file","B-服务降级-Sentinel.html.vue"]]);export{x as default};
