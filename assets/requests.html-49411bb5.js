import{_ as l,Q as i,S as c,U as n,W as a,X as t,a8 as s,a9 as u,H as p}from"./framework-d7e1aa10.js";const r={},d=n("h1",{id:"requests",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#requests","aria-hidden":"true"},"#"),s(" Requests")],-1),k={class:"table-of-contents"},v={href:"https://requests.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"},m=n("li",null,[s("Python requests库是一个基于 "),n("code",null,"urllib"),s(" 的，采用 "),n("code",null,"Apache2"),s(" 开源协议的HTTP库，它可以方便地发送和接收 "),n("code",null,"HTTP"),s(" 请求和响应。它提供了一些简单的API函数，如 "),n("code",null,"get, post, put, delete"),s(" 等，以及一个 "),n("code",null,"Request"),s(" 类，用于构建和发送自定义的请求")],-1),h=u(`<h2 id="官方示例" tabindex="-1"><a class="header-anchor" href="#官方示例" aria-hidden="true">#</a> 官方示例</h2><p><mark>使用 urllib2：</mark></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> urllib2

gh_url <span class="token operator">=</span> <span class="token string">&#39;https://api.github.com&#39;</span>

req <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>gh_url<span class="token punctuation">)</span>

password_manager <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>HTTPPasswordMgrWithDefaultRealm<span class="token punctuation">(</span><span class="token punctuation">)</span>
password_manager<span class="token punctuation">.</span>add_password<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> gh_url<span class="token punctuation">,</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pass&#39;</span><span class="token punctuation">)</span>

auth_manager <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>HTTPBasicAuthHandler<span class="token punctuation">(</span>password_manager<span class="token punctuation">)</span>
opener <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>build_opener<span class="token punctuation">(</span>auth_manager<span class="token punctuation">)</span>

urllib2<span class="token punctuation">.</span>install_opener<span class="token punctuation">(</span>opener<span class="token punctuation">)</span>

handler <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span>

<span class="token keyword">print</span> handler<span class="token punctuation">.</span>getcode<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> handler<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>getheader<span class="token punctuation">(</span><span class="token string">&#39;content-type&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><mark>使用 requests：</mark></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests

r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;https://api.github.com&#39;</span><span class="token punctuation">,</span> auth<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pass&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span> r<span class="token punctuation">.</span>status_code
<span class="token keyword">print</span> r<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-type&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function b(_,g){const e=p("router-link"),o=p("ExternalLinkIcon");return i(),c("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[a(e,{to:"#requests"},{default:t(()=>[s("Requests")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#官方示例"},{default:t(()=>[s("官方示例")]),_:1})])])])])]),n("ul",null,[n("li",null,[n("a",v,[s("官方文档"),a(o)])]),m]),h])}const f=l(r,[["render",b],["__file","requests.html.vue"]]);export{f as default};
