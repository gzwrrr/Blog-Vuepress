import{_ as r,Q as n,S as d,U as l,W as a,X as t,a8 as i,a9 as u,H as h}from"./framework-d7e1aa10.js";const o={},p=l("h1",{id:"性能测试指标",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#性能测试指标","aria-hidden":"true"},"#"),i(" 性能测试指标")],-1),s={class:"table-of-contents"},c=u('<h1 id="写在前面" tabindex="-1"><a class="header-anchor" href="#写在前面" aria-hidden="true">#</a> 写在前面</h1><ol><li><p>为什么要进行性能测试——优化</p></li><li><p>一般如何优化——找到性能瓶颈再加以解决</p></li><li><p>这些瓶颈一般能通过性能指标来暴露出来</p></li><li><p>性能测试就是为了获取这些指标</p></li></ol><h1 id="性能测试流程" tabindex="-1"><a class="header-anchor" href="#性能测试流程" aria-hidden="true">#</a> 性能测试流程</h1><h2 id="需求分析" tabindex="-1"><a class="header-anchor" href="#需求分析" aria-hidden="true">#</a> 需求分析</h2><ul><li>明确系统架构</li><li>明确系统运行要求</li><li>明确测试内容</li><li>明确性能测试的指标 <ul><li>无明确需求指标</li><li>有明确需求指标</li></ul></li><li>明确性能测试策略 <ul><li>基准测试</li><li>压力测试</li><li>负载测试</li><li>稳定性测试</li></ul></li></ul><h2 id="测试计划以及方案" tabindex="-1"><a class="header-anchor" href="#测试计划以及方案" aria-hidden="true">#</a> 测试计划以及方案</h2><p>计划：</p><ul><li>测试目标</li><li>人力资源</li><li>时间进度：包括用例设计、环境搭建、数据准备、脚本开发与执行、测试结果分析</li><li>风险评估</li></ul><p>方案：</p><ul><li>测试环境：包括架构设计、软硬件配置（服务器、数据库，尽量和生产环境一致）</li><li>测试工具：LoadRunner、Jmeter</li><li>监控工具：Linux: nmon、rpc、jvisualVm、spotlight | Windows: spotlight、perfmon</li></ul><p>策略：满足规定服务器资源性能指标范围内，模拟不同用户数量的性能测试，确定系统能够承受的最大并发数</p><ul><li>一般性能测试 <ul><li>单一场景测试</li><li>混合场景测试</li></ul></li><li>稳定性测试 <ul><li>混和业务场景下，负载测试并发数下，延长测试时间至少 72 小时以考察系统的稳定性</li></ul></li></ul><h2 id="测试用例设计及执行" tabindex="-1"><a class="header-anchor" href="#测试用例设计及执行" aria-hidden="true">#</a> 测试用例设计及执行</h2><p>设计（按场景分类）：</p><ul><li>预期性能指标测试</li><li>单业务并发性能测试</li><li>混合场景并发性能测试</li></ul><p>具体设计：</p><ul><li>明确测试性能点：如登录、注册</li><li>尝试编写用例</li></ul><p>执行：</p><ul><li>编写脚本</li><li>场景监控设计</li><li>运行场景并监控</li><li>编写测试报告</li></ul><h2 id="结果分析" tabindex="-1"><a class="header-anchor" href="#结果分析" aria-hidden="true">#</a> 结果分析</h2><blockquote><p>略，具体结果具体分析</p></blockquote><h1 id="性能指标" tabindex="-1"><a class="header-anchor" href="#性能指标" aria-hidden="true">#</a> 性能指标</h1><p>响应时间：从用户发送一个请求到用户接收到服务器返回的响应数据所经历的时间（等待时间+服务时间）</p><p>并发数：反应系统的负载能力，可以通过分析每秒访问日志数得到</p><ul><li>并发用户数：某一时刻同时向系统提交请求的用户数</li><li>在线用户数：某段时间内访问系统的用户数，不一定同时向系统提交请求</li><li>系统用户数：系统注册的总用户数</li></ul><hr><p>一般 80% 的业务都是在 20% 的时间内完成的，这 20% 的时间称为峰值时间</p><p>TPS（每秒事务数）：单位时间内系统处理客户端请求的事务数，计算：并发数/平均响应时间</p><p>QPS (每秒查询率)：单位时间内系统处理客户端请求的数量</p><p>吞吐量：系统单位时间内处理请求的数量，TPS/QPS 都是吞吐量的常用量化指标</p><hr><p>资源利用率：不同系统资源的使用程度，通常以占用最大值的百分比来衡量，资源指标包括：</p><ul><li>CPU 使用率：一般上限不超过 85%</li><li>内存利用率：一般上限不超过 85%</li><li>磁盘 IO：一般用磁盘读写操作所占的时间百分比来衡量磁盘性能</li><li>网络带宽 ：用于判断网络连接速度是否有瓶颈</li></ul><h1 id="访问指标" tabindex="-1"><a class="header-anchor" href="#访问指标" aria-hidden="true">#</a> 访问指标</h1><p><strong>PV</strong>(Page View)：页面访问量，即页面浏览量或点击量，用户每次刷新即被计算一次。可以统计服务一天的访问日志得到</p><p><strong>UV</strong>(Unique Visitor)：独立访客，统计1天内访问某站点的用户数。可以统计服务一天的访问日志并根据用户的唯一标识去重得到。响应时间（RT）：响应时间是指系统对请求作出响应的时间，一般取平均响应时间。可以通过Nginx、Apache之类的Web Server得到</p><p><strong>DAU</strong>(Daily Active User)，日活跃用户数量。常用于反映网站、互联网应用或网络游戏的运营情况。DAU通常统计一日（统计日）之内，登录或使用了某个产品的用户数（去除重复登录的用户），与UV概念相似</p><p><strong>MAU</strong>(Month Active User)：月活跃用户数量，指网站、app等去重后的月活跃用户数量</p><h1 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h1><p>用户关注的是用户操作的相应时间。</p><p>其次，我们站在管理员的角度考虑需要关注的性能点。</p><p>1、 响应时间 2、 服务器资源使用情况是否合理 3、 应用服务器和数据库资源使用是否合理 4、 系统能否实现扩展 5、 系统最多支持多少用户访问、系统最大业务处理量是多少 6、 系统性能可能存在的瓶颈在哪里 7、 更换那些设备可以提高性能 8、 系统能否支持7×24小时的业务访问</p><p>再次，站在开发（设计）人员角度去考虑。</p><p>1、 架构设计是否合理 2、 数据库设计是否合理 3、 代码是否存在性能方面的问题 4、 系统中是否有不合理的内存使用方式 5、 系统中是否存在不合理的线程同步方式 6、 系统中是否存在不合理的资源竞争</p>',44);function _(f,x){const e=h("router-link");return n(),d("div",null,[p,l("nav",s,[l("ul",null,[l("li",null,[a(e,{to:"#性能测试指标"},{default:t(()=>[i("性能测试指标")]),_:1})]),l("li",null,[a(e,{to:"#写在前面"},{default:t(()=>[i("写在前面")]),_:1})]),l("li",null,[a(e,{to:"#性能测试流程"},{default:t(()=>[i("性能测试流程")]),_:1}),l("ul",null,[l("li",null,[a(e,{to:"#需求分析"},{default:t(()=>[i("需求分析")]),_:1})]),l("li",null,[a(e,{to:"#测试计划以及方案"},{default:t(()=>[i("测试计划以及方案")]),_:1})]),l("li",null,[a(e,{to:"#测试用例设计及执行"},{default:t(()=>[i("测试用例设计及执行")]),_:1})]),l("li",null,[a(e,{to:"#结果分析"},{default:t(()=>[i("结果分析")]),_:1})])])]),l("li",null,[a(e,{to:"#性能指标"},{default:t(()=>[i("性能指标")]),_:1})]),l("li",null,[a(e,{to:"#访问指标"},{default:t(()=>[i("访问指标")]),_:1})]),l("li",null,[a(e,{to:"#其他"},{default:t(()=>[i("其他")]),_:1})])])]),c])}const g=r(o,[["render",_],["__file","性能测试指标-未发布.html.vue"]]);export{g as default};
