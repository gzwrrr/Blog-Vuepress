import{_ as t,Q as o,S as s,U as e,a8 as l}from"./framework-d7e1aa10.js";const n={},r=e("h1",{id:"分布式锁",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#分布式锁","aria-hidden":"true"},"#"),l(" 分布式锁")],-1),_=e("ol",null,[e("li",null,"基于数据库的分布式锁：通过在数据库中创建唯一索引或者行锁等机制实现分布式锁，优点是实现简单，缺点是并发量较大时会导致数据库性能瓶颈。"),e("li",null,"基于 Redis 的分布式锁：通过 Redis 的 setnx 命令实现分布式锁，优点是性能较好，实现较为简单，缺点是存在锁竞争和锁过期等问题需要处理。可重入性及锁续期没有实现，通过redisson解决。单线程处理网络请求，不需要考虑并发安全性。"),e("li",null,"基于 ZooKeeper 的分布式锁：通过 ZooKeeper 的顺序节点机制实现分布式锁，优点是实现较为稳定可靠，缺点是需要依赖 ZooKeeper 服务，对于小规模应用而言可能过于复杂。"),e("li",null,"基于 etcd 的分布式锁：通过 etcd 的比较和交换机制实现分布式锁，类似于 Redis 的 setnx 命令，优点是实现较为简单，缺点是也存在锁竞争和锁过期等问题。")],-1),a=[r,_];function c(d,i){return o(),s("div",null,a)}const u=t(n,[["render",c],["__file","分布式锁.html.vue"]]);export{u as default};
